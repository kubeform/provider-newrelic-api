/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-newrelic-api/apis/nrql/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DropRuleLister helps list DropRules.
// All objects returned here must be treated as read-only.
type DropRuleLister interface {
	// List lists all DropRules in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DropRule, err error)
	// DropRules returns an object that can list and get DropRules.
	DropRules(namespace string) DropRuleNamespaceLister
	DropRuleListerExpansion
}

// dropRuleLister implements the DropRuleLister interface.
type dropRuleLister struct {
	indexer cache.Indexer
}

// NewDropRuleLister returns a new DropRuleLister.
func NewDropRuleLister(indexer cache.Indexer) DropRuleLister {
	return &dropRuleLister{indexer: indexer}
}

// List lists all DropRules in the indexer.
func (s *dropRuleLister) List(selector labels.Selector) (ret []*v1alpha1.DropRule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DropRule))
	})
	return ret, err
}

// DropRules returns an object that can list and get DropRules.
func (s *dropRuleLister) DropRules(namespace string) DropRuleNamespaceLister {
	return dropRuleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DropRuleNamespaceLister helps list and get DropRules.
// All objects returned here must be treated as read-only.
type DropRuleNamespaceLister interface {
	// List lists all DropRules in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DropRule, err error)
	// Get retrieves the DropRule from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.DropRule, error)
	DropRuleNamespaceListerExpansion
}

// dropRuleNamespaceLister implements the DropRuleNamespaceLister
// interface.
type dropRuleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DropRules in the indexer for a given namespace.
func (s dropRuleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DropRule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DropRule))
	})
	return ret, err
}

// Get retrieves the DropRule from the indexer for a given namespace and name.
func (s dropRuleNamespaceLister) Get(name string) (*v1alpha1.DropRule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("droprule"), name)
	}
	return obj.(*v1alpha1.DropRule), nil
}
